{"version":3,"file":"TherapistsPage-bd26e22c.js","sources":["../../src/pages/therapists/widgets/TherapistAvatar.vue","../../src/pages/therapists/widgets/TherapistsTable.vue","../../src/pages/therapists/composables/useTherapists.ts","../../src/pages/therapists/widgets/EditTherapistForm.vue","../../src/pages/therapists/TherapistsPage.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { PropType } from 'vue'\nimport { Therapist } from '../types'\n\nconst avatarColor = (therapistName: string) => {\n    const colors = ['primary', '#FFD43A', '#ADFF00', '#262824', 'danger']\n    const index = therapistName.charCodeAt(0) % colors.length\n    return colors[index]\n}\n\ndefineProps({\n    therapist: {\n        type: Object as PropType<Therapist>,\n        required: true,\n    },\n    size: {\n        type: String,\n        default: 'medium',\n    },\n})\n\nconst isUrl = (avatar: string) => {\n    if (!avatar) return false\n    return avatar.startsWith('http') || avatar.startsWith('blob:')\n}\n</script>\n\n<template>\n    <VaAvatar\n        :size=\"size\"\n        :src=\"isUrl(therapist.coverImageUrl) ? therapist.coverImageUrl : ''\"\n        :fallback-text=\"therapist.name[0]\"\n        :color=\"avatarColor(therapist.name)\"\n    />\n</template>\n","<script setup lang=\"ts\">\nimport { defineVaDataTableColumns, useModal } from 'vuestic-ui'\nimport { Therapist } from '../types'\nimport TherapistAvatar from '../widgets/TherapistAvatar.vue'\nimport { PropType, computed, toRef } from 'vue'\nimport { Pagination, Sorting } from '../../../data/pages/therapists'\nimport { useVModel } from '@vueuse/core'\n\nconst columns = defineVaDataTableColumns([\n    { label: 'Number', key: 'number', sortable: true },\n    { label: 'Name', key: 'name', sortable: true },\n    { label: 'Sort Order', key: 'sortOrder', sortable: true },\n    { label: ' ', key: 'actions', align: 'right' },\n])\n\nconst props = defineProps({\n    therapists: {\n        type: Array as PropType<Therapist[]>,\n        required: true,\n    },\n    loading: { type: Boolean, default: false },\n    pagination: { type: Object as PropType<Pagination>, required: true },\n    sortBy: { type: String as PropType<Sorting['sortBy']>, required: true },\n    sortingOrder: { type: String as PropType<Sorting['sortingOrder']>, required: true },\n})\n\nconst emit = defineEmits<{\n    (event: 'edit-therapist', therapist: Therapist): void\n    (event: 'delete-therapist', therapist: Therapist): void\n    (event: 'update:sortBy', sortBy: Sorting['sortBy']): void\n    (event: 'update:sortingOrder', sortingOrder: Sorting['sortingOrder']): void\n}>()\n\nconst therapists = toRef(props, 'therapists')\nconst sortByVModel = useVModel(props, 'sortBy', emit)\nconst sortingOrderVModel = useVModel(props, 'sortingOrder', emit)\n\nconst totalPages = computed(() => Math.ceil(props.pagination.total / props.pagination.perPage))\n\nconst { confirm } = useModal()\n\nconst onTherapistDelete = async (therapist: Therapist) => {\n    const agreed = await confirm({\n        title: 'Delete therapist',\n        message: `Are you sure you want to delete ${therapist.name}?`,\n        okText: 'Delete',\n        cancelText: 'Cancel',\n        size: 'small',\n        maxWidth: '380px',\n    })\n\n    if (agreed) {\n        emit('delete-therapist', therapist)\n    }\n}\n</script>\n\n<template>\n    <VaDataTable\n        v-model:sort-by=\"sortByVModel\"\n        v-model:sorting-order=\"sortingOrderVModel\"\n        :columns=\"columns\"\n        :items=\"therapists\"\n        :loading=\"$props.loading\"\n    >\n        <template #cell(number)=\"{ rowData }\">\n            <div class=\"font-semibold\">\n                {{ rowData.number }}\n            </div>\n        </template>\n\n        <template #cell(name)=\"{ rowData }\">\n            <div class=\"flex items-center gap-2 max-w-[230px] ellipsis\">\n                <TherapistAvatar :therapist=\"rowData as Therapist\" size=\"small\" />\n                {{ rowData.name }}\n            </div>\n        </template>\n\n        <template #cell(sortOrder)=\"{ rowData }\">\n            <div class=\"text-center font-mono\">\n                {{ rowData.sortOrder }}\n            </div>\n        </template>\n\n        <template #cell(actions)=\"{ rowData }\">\n            <div class=\"flex gap-2 justify-end\">\n                <VaButton\n                    preset=\"primary\"\n                    size=\"small\"\n                    icon=\"mso-edit\"\n                    aria-label=\"Edit therapist\"\n                    @click=\"$emit('edit-therapist', rowData as Therapist)\"\n                />\n                <VaButton\n                    preset=\"primary\"\n                    size=\"small\"\n                    icon=\"mso-delete\"\n                    color=\"danger\"\n                    aria-label=\"Delete therapist\"\n                    @click=\"onTherapistDelete(rowData as Therapist)\"\n                />\n            </div>\n        </template>\n    </VaDataTable>\n\n    <div class=\"flex flex-col-reverse md:flex-row gap-2 justify-between items-center py-2\">\n        <div>\n            <b>{{ $props.pagination.total }} results.</b>\n            Results per page\n            <VaSelect v-model=\"$props.pagination.perPage\" class=\"!w-20\" :options=\"[10, 50, 100]\" />\n        </div>\n\n        <div v-if=\"totalPages > 1\" class=\"flex\">\n            <VaButton\n                preset=\"secondary\"\n                icon=\"va-arrow-left\"\n                aria-label=\"Previous page\"\n                :disabled=\"$props.pagination.page === 1\"\n                @click=\"$props.pagination.page--\"\n            />\n            <VaButton\n                class=\"mr-2\"\n                preset=\"secondary\"\n                icon=\"va-arrow-right\"\n                aria-label=\"Next page\"\n                :disabled=\"$props.pagination.page === totalPages\"\n                @click=\"$props.pagination.page++\"\n            />\n            <VaPagination\n                v-model=\"$props.pagination.page\"\n                buttons-preset=\"secondary\"\n                :pages=\"totalPages\"\n                :visible-pages=\"5\"\n                :boundary-links=\"false\"\n                :direction-links=\"false\"\n            />\n        </div>\n    </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.va-data-table {\n    ::v-deep(.va-data-table__table-tr) {\n        border-bottom: 1px solid var(--va-background-border);\n    }\n}\n</style>\n","import { Ref, ref, watch } from 'vue'\nimport { Therapist, CreateTherapistRequest, UpdateTherapistRequest } from '../types'\nimport { watchIgnorable } from '@vueuse/core'\nimport api from '../../../services/api'\n\n// 類型定義移到這裡，不再依賴 data 層\nexport type Pagination = {\n    page: number\n    perPage: number\n    total: number\n}\n\nexport type Sorting = {\n    sortBy: keyof Therapist | undefined\n    sortingOrder: 'asc' | 'desc' | null\n}\n\nexport type Filters = {\n    isActive: boolean\n    search: string\n}\n\nconst makePaginationRef = () => ref<Pagination>({ page: 1, perPage: 10, total: 0 })\nconst makeSortingRef = () => ref<Sorting>({ sortBy: 'name', sortingOrder: null })\nconst makeFiltersRef = () => ref<Partial<Filters>>({ isActive: true, search: '' })\n\nexport const useTherapists = (options?: {\n    pagination?: Ref<Pagination>\n    sorting?: Ref<Sorting>\n    filters?: Ref<Partial<Filters>>\n}) => {\n    const isLoading = ref(false)\n    const therapists = ref<Therapist[]>([])\n\n    const { filters = makeFiltersRef(), sorting = makeSortingRef(), pagination = makePaginationRef() } = options || {}\n\n    const fetch = async () => {\n        isLoading.value = true\n        const { data } = await api.getTherapists({\n            // ...unref(filters),\n            // ...unref(sorting),\n            isActive: filters.value.isActive,\n            offset: pagination.value.page * pagination.value.perPage - pagination.value.perPage,\n            limit: pagination.value.perPage,\n        } as {\n            limit: number\n            offset: number\n        })\n        therapists.value = data.data\n        console.log(data, 'data')\n        ignoreUpdates(() => {\n            pagination.value = {\n                page: pagination.value.page,\n                perPage: pagination.value.perPage,\n                total: data.total || data.data.length,\n            }\n        })\n\n        isLoading.value = false\n    }\n\n    const { ignoreUpdates } = watchIgnorable([pagination, sorting], fetch, { deep: true })\n\n    watch(\n        filters,\n        () => {\n            // Reset pagination to first page when filters changed\n            pagination.value.page = 1\n            fetch()\n        },\n        { deep: true },\n    )\n\n    fetch()\n\n    return {\n        isLoading,\n\n        filters,\n        sorting,\n        pagination,\n\n        therapists,\n\n        fetch,\n\n        async add(therapist: CreateTherapistRequest) {\n            isLoading.value = true\n            try {\n                await api.axiosInstance.post('/plan/dragon-massage/therapist', therapist)\n                await fetch()\n            } catch (error) {\n                console.error('Error adding therapist:', error)\n                throw error\n            } finally {\n                isLoading.value = false\n            }\n        },\n\n        async update(therapist: UpdateTherapistRequest) {\n            isLoading.value = true\n            const { id, ...therapistData } = therapist\n            await api.axiosInstance.put(`/plan/dragon-massage/therapist/${id}`, therapistData)\n            await fetch()\n            isLoading.value = false\n        },\n\n        async remove(therapist: Therapist) {\n            isLoading.value = true\n            await api.axiosInstance.post('/plan/dragon-massage/therapist', therapist)\n            await fetch()\n            isLoading.value = false\n        },\n\n        async uploadImages(images: File[]): Promise<string[]> {\n            try {\n                const response = await api.uploadTherapistImages(images)\n                return response.data.data.imageNames\n            } catch (error) {\n                console.error('Error uploading images:', error)\n                throw error\n            }\n        },\n    }\n}\n","<script setup lang=\"ts\">\nimport { PropType, computed, ref, watch } from 'vue'\nimport { useForm } from 'vuestic-ui'\nimport { Therapist, CreateTherapistRequest, UpdateTherapistRequest } from '../types'\nimport TherapistAvatar from '../widgets/TherapistAvatar.vue'\nimport { validators } from '../../../services/utils'\nimport { useTherapists } from '../composables/useTherapists'\nconst { uploadImages } = useTherapists()\nconst props = defineProps({\n    therapist: {\n        type: Object as PropType<Therapist | null>,\n        default: null,\n    },\n    saveButtonLabel: {\n        type: String,\n        default: 'Save',\n    },\n})\n\nconst defaultNewTherapist: Therapist = {\n    id: -1,\n    number: 0,\n    name: '',\n    coverImage: '',\n    images: [],\n    height: 0,\n    weight: 0,\n    birthYear: 0,\n    description: '',\n    technicalLevel: '',\n    removal: '',\n    serviceMedal: '',\n    note: '',\n    recommendRank: '',\n    paymentNote: '',\n    sortOrder: 0,\n    isActive: true,\n    createdAt: '',\n    updatedAt: '',\n    deletedAt: '',\n    coverImageUrl: '',\n    imageUrls: [],\n}\n\nconst newTherapist = ref<Therapist>({ ...defaultNewTherapist })\n\nconst isFormHasUnsavedChanges = computed(() => {\n    return Object.keys(newTherapist.value).some((key) => {\n        if (key === 'avatar' || key === 'images') {\n            return false\n        }\n\n        return (\n            newTherapist.value[key as keyof Therapist] !==\n            (props.therapist ?? defaultNewTherapist)?.[key as keyof Therapist]\n        )\n    })\n})\n\ndefineExpose({\n    isFormHasUnsavedChanges,\n})\n\nwatch(\n    () => props.therapist,\n    () => {\n        if (!props.therapist) {\n            return\n        }\n\n        newTherapist.value = {\n            ...props.therapist,\n        }\n    },\n    { immediate: true },\n)\n\nconst avatar = ref<File>()\nconst originalImages = ref<File[]>([])\n\nconst makeAvatarBlobUrl = (avatar: File) => {\n    return URL.createObjectURL(avatar)\n}\n\nconst makeImageBlobUrl = (image: File) => {\n    return URL.createObjectURL(image)\n}\n\nconst removeExistingImage = (index: number) => {\n    if (newTherapist.value.imageUrls) {\n        newTherapist.value.imageUrls.splice(index, 1)\n    }\n    if (newTherapist.value.images) {\n        newTherapist.value.images.splice(index, 1)\n    }\n}\n\nwatch(avatar, (newAvatar) => {\n    newTherapist.value.coverImageUrl = newAvatar ? makeAvatarBlobUrl(newAvatar) : ''\n})\n\nconst form = useForm('add-therapist-form')\n\nconst emit = defineEmits<{\n    close: []\n    save: [therapist: CreateTherapistRequest | UpdateTherapistRequest]\n}>()\n\nconst onSave = async () => {\n    // 首先驗證表單，如果驗證失敗就直接返回\n    if (!form.validate()) {\n        return\n    }\n\n    if (avatar.value) {\n        await uploadImages([avatar.value]).then((response: string[]) => {\n            newTherapist.value.coverImage = response[0]\n        })\n    }\n    if (originalImages.value.length > 0) {\n        await uploadImages(originalImages.value).then((response: string[]) => {\n            // 增量式新增圖片，不覆蓋既有的圖片\n            if (!newTherapist.value.images) {\n                newTherapist.value.images = []\n            }\n            newTherapist.value.images.push(...response)\n        })\n    }\n\n    // 判斷是新增還是編輯\n    if (props.therapist) {\n        // 編輯模式 - 使用 UpdateTherapistRequest\n        const therapistData: UpdateTherapistRequest = {\n            id: props.therapist.id,\n            number: Number(newTherapist.value.number) || 0,\n            name: newTherapist.value.name,\n            coverImage: newTherapist.value.coverImage,\n            images: newTherapist.value.images,\n            height: newTherapist.value.height ? Number(newTherapist.value.height) : 0,\n            weight: newTherapist.value.weight ? Number(newTherapist.value.weight) : 0,\n            birthYear: newTherapist.value.birthYear ? Number(newTherapist.value.birthYear) : 0,\n            description: newTherapist.value.description,\n            technicalLevel: newTherapist.value.technicalLevel,\n            removal: newTherapist.value.removal,\n            serviceMedal: newTherapist.value.serviceMedal,\n            note: newTherapist.value.note,\n            recommendRank: newTherapist.value.recommendRank,\n            paymentNote: newTherapist.value.paymentNote,\n            sortOrder: Number(newTherapist.value.sortOrder) || 0,\n            isActive: newTherapist.value.isActive,\n        }\n\n        emit('save', therapistData)\n    } else {\n        // 新增模式 - 使用 CreateTherapistRequest\n        const therapistData: CreateTherapistRequest = {\n            number: Number(newTherapist.value.number) || 0,\n            name: newTherapist.value.name,\n            coverImage: newTherapist.value.coverImage,\n            images: newTherapist.value.images,\n            height: newTherapist.value.height ? Number(newTherapist.value.height) : 0,\n            weight: newTherapist.value.weight ? Number(newTherapist.value.weight) : 0,\n            birthYear: newTherapist.value.birthYear ? Number(newTherapist.value.birthYear) : 0,\n            description: newTherapist.value.description,\n            technicalLevel: newTherapist.value.technicalLevel,\n            removal: newTherapist.value.removal,\n            serviceMedal: newTherapist.value.serviceMedal,\n            note: newTherapist.value.note,\n            recommendRank: newTherapist.value.recommendRank,\n            paymentNote: newTherapist.value.paymentNote,\n            sortOrder: Number(newTherapist.value.sortOrder) || 0,\n            isActive: newTherapist.value.isActive,\n        }\n\n        emit('save', therapistData)\n    }\n}\n</script>\n\n<template>\n    <VaForm\n        v-slot=\"{ isValid }\"\n        ref=\"add-therapist-form\"\n        class=\"flex-col justify-start items-start gap-4 inline-flex w-full\"\n    >\n        <VaFileUpload\n            v-model=\"avatar\"\n            type=\"single\"\n            hide-file-list\n            class=\"self-stretch justify-start items-center gap-4 inline-flex\"\n        >\n            <TherapistAvatar :therapist=\"newTherapist\" size=\"large\" />\n            <VaButton preset=\"primary\" size=\"small\">Add image</VaButton>\n            <VaButton\n                v-if=\"avatar\"\n                preset=\"primary\"\n                color=\"danger\"\n                size=\"small\"\n                icon=\"delete\"\n                class=\"z-10\"\n                @click.stop=\"avatar = undefined\"\n            />\n        </VaFileUpload>\n        <div class=\"self-stretch flex-col justify-start items-start gap-4 flex\">\n            <div class=\"flex gap-4 flex-col sm:flex-row w-full\">\n                <VaInput\n                    v-model=\"newTherapist.name\"\n                    label=\"名稱\"\n                    class=\"w-full sm:w-1/2\"\n                    :rules=\"[validators.required]\"\n                    name=\"name\"\n                />\n                <VaInput\n                    v-model=\"newTherapist.number\"\n                    label=\"號碼\"\n                    class=\"w-full sm:w-1/2\"\n                    :rules=\"[validators.required]\"\n                    name=\"number\"\n                    type=\"number\"\n                />\n            </div>\n            <div class=\"flex gap-4 flex-col sm:flex-row w-full\">\n                <VaInput\n                    v-model=\"newTherapist.height\"\n                    label=\"身高 (cm)\"\n                    class=\"w-full sm:w-1/2\"\n                    name=\"height\"\n                    type=\"number\"\n                />\n                <VaInput\n                    v-model=\"newTherapist.weight\"\n                    label=\"體重 (kg)\"\n                    class=\"w-full sm:w-1/2\"\n                    name=\"weight\"\n                    type=\"number\"\n                />\n            </div>\n            <div class=\"flex gap-4 flex-col sm:flex-row w-full\">\n                <VaInput\n                    v-model=\"newTherapist.birthYear\"\n                    label=\"出生年份\"\n                    class=\"w-full sm:w-1/2\"\n                    name=\"birthYear\"\n                    type=\"number\"\n                />\n                <VaInput\n                    v-model=\"newTherapist.technicalLevel\"\n                    label=\"技術級別\"\n                    class=\"w-full sm:w-1/2\"\n                    name=\"technicalLevel\"\n                />\n            </div>\n            <div class=\"flex gap-4 flex-col sm:flex-row w-full\">\n                <VaInput\n                    v-model=\"newTherapist.serviceMedal\"\n                    label=\"服務獎章\"\n                    class=\"w-full sm:w-1/2\"\n                    name=\"serviceMedal\"\n                />\n                <VaInput\n                    v-model=\"newTherapist.recommendRank\"\n                    label=\"推薦指數\"\n                    class=\"w-full sm:w-1/2\"\n                    name=\"recommendRank\"\n                />\n            </div>\n\n            <!-- 複數相片上傳 -->\n            <div class=\"w-full\">\n                <label class=\"va-input-label\">相片集</label>\n                <VaFileUpload\n                    v-model=\"originalImages\"\n                    type=\"gallery\"\n                    file-types=\"image/*\"\n                    class=\"w-full\"\n                    hide-file-list\n                >\n                    <VaButton preset=\"primary\" size=\"small\">上傳相片</VaButton>\n                </VaFileUpload>\n\n                <!-- 顯示縮圖 -->\n                <div\n                    v-if=\"newTherapist.imageUrls?.length > 0 || originalImages.length > 0\"\n                    class=\"flex flex-wrap gap-2 mt-4\"\n                >\n                    <!-- 顯示舊有照片縮圖 -->\n                    <div\n                        v-for=\"(imageUrl, index) in newTherapist.imageUrls\"\n                        :key=\"`existing-${index}`\"\n                        class=\"relative w-20 h-20 border border-gray-300 rounded overflow-hidden\"\n                    >\n                        <img :src=\"imageUrl\" :alt=\"`Existing Photo ${index + 1}`\" class=\"w-full h-full object-cover\" />\n                        <VaButton\n                            preset=\"primary\"\n                            color=\"danger\"\n                            size=\"small\"\n                            icon=\"delete\"\n                            class=\"absolute top-1 right-1 w-6 h-6 min-w-0 p-0\"\n                            @click=\"removeExistingImage(index)\"\n                        />\n                    </div>\n\n                    <!-- 顯示新上傳照片縮圖 -->\n                    <div\n                        v-for=\"(image, index) in originalImages\"\n                        :key=\"`new-${index}`\"\n                        class=\"relative w-20 h-20 border border-gray-300 rounded overflow-hidden\"\n                    >\n                        <img\n                            :src=\"makeImageBlobUrl(image)\"\n                            :alt=\"`New Photo ${index + 1}`\"\n                            class=\"w-full h-full object-cover\"\n                        />\n                        <VaButton\n                            preset=\"primary\"\n                            color=\"danger\"\n                            size=\"small\"\n                            icon=\"delete\"\n                            class=\"absolute top-1 right-1 w-6 h-6 min-w-0 p-0\"\n                            @click=\"originalImages.splice(index, 1)\"\n                        />\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"flex gap-4 w-full\">\n                <div class=\"flex items-center w-1/2 mt-4\">\n                    <VaCheckbox v-model=\"newTherapist.isActive\" label=\"Active\" class=\"w-full\" name=\"active\" />\n                </div>\n            </div>\n\n            <VaTextarea v-model=\"newTherapist.description\" label=\"Description\" class=\"w-full\" name=\"description\" />\n            <VaTextarea v-model=\"newTherapist.note\" label=\"Notes\" class=\"w-full\" name=\"note\" />\n            <VaTextarea v-model=\"newTherapist.paymentNote\" label=\"Payment Note\" class=\"w-full\" name=\"paymentNote\" />\n\n            <div class=\"flex gap-4 flex-col sm:flex-row w-full\">\n                <VaInput\n                    v-model=\"newTherapist.sortOrder\"\n                    label=\"Sort Order\"\n                    class=\"w-full sm:w-1/2\"\n                    :rules=\"[validators.required]\"\n                    name=\"sortOrder\"\n                    type=\"number\"\n                />\n                <VaInput v-model=\"newTherapist.removal\" label=\"Removal Status\" class=\"w-full sm:w-1/2\" name=\"removal\" />\n            </div>\n            <div class=\"flex gap-2 flex-col-reverse items-stretch justify-end w-full sm:flex-row sm:items-center\">\n                <VaButton preset=\"secondary\" color=\"secondary\" @click=\"$emit('close')\">Cancel</VaButton>\n                <VaButton :disabled=\"!isValid\" @click=\"onSave\">{{ saveButtonLabel }}</VaButton>\n            </div>\n        </div>\n    </VaForm>\n</template>\n","<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport TherapistsTable from './widgets/TherapistsTable.vue'\nimport EditTherapistForm from './widgets/EditTherapistForm.vue'\nimport { Therapist, CreateTherapistRequest, UpdateTherapistRequest } from './types'\nimport { useTherapists } from './composables/useTherapists'\nimport { useModal, useToast } from 'vuestic-ui'\n\nconst doShowEditTherapistModal = ref(false)\n\nconst { therapists, isLoading, filters, sorting, pagination, ...therapistsApi } = useTherapists()\n\nconst therapistToEdit = ref<Therapist | null>(null)\n\nconst showEditTherapistModal = (therapist: Therapist) => {\n    therapistToEdit.value = therapist\n    doShowEditTherapistModal.value = true\n}\n\nconst showAddTherapistModal = () => {\n    therapistToEdit.value = null\n    doShowEditTherapistModal.value = true\n}\n\nconst { init: notify } = useToast()\n\nconst onTherapistSaved = async (therapist: CreateTherapistRequest | UpdateTherapistRequest) => {\n    try {\n        if ('id' in therapist) {\n            // 編輯模式 - therapist 包含 id 屬性\n            await therapistsApi.update(therapist as UpdateTherapistRequest)\n            notify({\n                message: `${therapist.name} has been updated`,\n                color: 'success',\n            })\n        } else {\n            // 新增模式 - therapist 沒有 id 屬性\n            await therapistsApi.add(therapist as CreateTherapistRequest)\n            notify({\n                message: `${therapist.name} has been created`,\n                color: 'success',\n            })\n        }\n    } catch (error) {\n        notify({\n            message: 'Operation failed. Please try again.',\n            color: 'danger',\n        })\n    }\n}\n\nconst onTherapistDelete = async (therapist: Therapist) => {\n    await therapistsApi.remove(therapist)\n    notify({\n        message: `${therapist.fullname} has been deleted`,\n        color: 'success',\n    })\n}\n\nconst editFormRef = ref()\n\nconst { confirm } = useModal()\n\nconst beforeEditFormModalClose = async (hide: () => unknown) => {\n    if (editFormRef.value.isFormHasUnsavedChanges) {\n        const agreed = await confirm({\n            maxWidth: '380px',\n            message: 'Form has unsaved changes. Are you sure you want to close it?',\n            size: 'small',\n        })\n        if (agreed) {\n            hide()\n        }\n    } else {\n        hide()\n    }\n}\n</script>\n\n<template>\n    <h1 class=\"page-title\">龍筋技師</h1>\n\n    <VaCard>\n        <VaCardContent>\n            <div class=\"flex flex-col md:flex-row gap-2 mb-2 justify-between\">\n                <div class=\"flex flex-col md:flex-row gap-2 justify-start\">\n                    <VaButtonToggle\n                        v-model=\"filters.isActive\"\n                        color=\"background-element\"\n                        border-color=\"background-element\"\n                        :options=\"[\n                            { label: 'Active', value: true },\n                            { label: 'Inactive', value: false },\n                        ]\"\n                    />\n                    <VaInput v-model=\"filters.search\" placeholder=\"Search\">\n                        <template #prependInner>\n                            <VaIcon name=\"search\" color=\"secondary\" size=\"small\" />\n                        </template>\n                    </VaInput>\n                </div>\n                <VaButton @click=\"showAddTherapistModal\">Add Therapist</VaButton>\n            </div>\n\n            <TherapistsTable\n                v-model:sort-by=\"sorting.sortBy\"\n                v-model:sorting-order=\"sorting.sortingOrder\"\n                :therapists=\"therapists\"\n                :loading=\"isLoading\"\n                :pagination=\"pagination\"\n                @editTherapist=\"showEditTherapistModal\"\n                @deleteTherapist=\"onTherapistDelete\"\n            />\n        </VaCardContent>\n    </VaCard>\n\n    <VaModal\n        v-slot=\"{ cancel, ok }\"\n        v-model=\"doShowEditTherapistModal\"\n        size=\"small\"\n        mobile-fullscreen\n        close-button\n        hide-default-actions\n        :before-cancel=\"beforeEditFormModalClose\"\n    >\n        <h1 class=\"va-h5\">{{ therapistToEdit ? 'Edit therapist' : 'Add therapist' }}</h1>\n        <EditTherapistForm\n            ref=\"editFormRef\"\n            :therapist=\"therapistToEdit\"\n            :save-button-label=\"therapistToEdit ? 'Save' : 'Add'\"\n            @close=\"cancel\"\n            @save=\"\n                (therapist: CreateTherapistRequest | UpdateTherapistRequest) => {\n                    onTherapistSaved(therapist)\n                    ok()\n                }\n            \"\n        />\n    </VaModal>\n</template>\n"],"names":["avatarColor","therapistName","colors","index","isUrl","avatar","columns","defineVaDataTableColumns","props","__props","emit","__emit","therapists","toRef","sortByVModel","useVModel","sortingOrderVModel","totalPages","computed","confirm","useModal","onTherapistDelete","therapist","makePaginationRef","ref","makeSortingRef","makeFiltersRef","useTherapists","options","isLoading","filters","sorting","pagination","fetch","data","api","ignoreUpdates","watchIgnorable","watch","error","id","therapistData","images","uploadImages","defaultNewTherapist","newTherapist","isFormHasUnsavedChanges","key","_a","__expose","originalImages","makeAvatarBlobUrl","makeImageBlobUrl","image","removeExistingImage","newAvatar","form","useForm","onSave","response","doShowEditTherapistModal","therapistsApi","therapistToEdit","showEditTherapistModal","showAddTherapistModal","notify","useToast","onTherapistSaved","editFormRef","beforeEditFormModalClose","hide"],"mappings":"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"}