{"version":3,"file":"BillingPage-809cc087.js","sources":["../../src/pages/billing/MembeshipTier.vue","../../src/pages/billing/modals/ChangeYourPaymentPlan.vue","../../src/pages/billing/PaymentInfo.vue","../../src/pages/billing/Invoices.vue","../../src/pages/billing/BillingPage.vue"],"sourcesContent":["<template>\n    <VaCard class=\"mb-6\">\n        <VaCardContent>\n            <h2 class=\"page-sub-title\">Membership tier</h2>\n            <template v-for=\"(plan, index) in plans\" :key=\"plan.id\">\n                <div class=\"flex items-center justify-between md:justify-items-stretch\">\n                    <div\n                        class=\"flex grow flex-col space-y-2 md:flex-row md:space-y-0 md:space-x-1 justify-between items-start md:items-center\"\n                    >\n                        <div class=\"flex items-center md:w-48\">\n                            <div class=\"font-bold\">{{ plan.name }}</div>\n                            <VaBadge v-if=\"plan.type === 'current'\" class=\"ml-2\" color=\"success\" text=\"Selected\" />\n                        </div>\n                        <div class=\"md:w-48\">\n                            <p class=\"mb-1\">{{ plan.padletsTotal }} padlets</p>\n                            <p>{{ plan.uploadLimit }}&nbsp;/upload</p>\n                        </div>\n                        <div class=\"md:w-48\">\n                            <template v-if=\"plan.priceMonth\">\n                                <p class=\"mb-1\">{{ plan.priceMonth }}&nbsp;/month</p>\n                                <p>{{ plan.priceYear }}&nbsp;/year</p>\n                            </template>\n                            <p v-else>Free</p>\n                        </div>\n                    </div>\n                    <div class=\"md:w-48 flex justify-end\">\n                        <div v-if=\"plan.type === 'current'\" class=\"font-bold\">{{ plan.padletsUsed }} padlets used</div>\n                        <VaButton v-else-if=\"plan.type === 'upgrade'\" @click=\"switchPlan(plan.id)\">Upgrade</VaButton>\n                        <VaButton v-else preset=\"primary\" @click=\"switchPlan(plan.id)\">Downgrade</VaButton>\n                    </div>\n                </div>\n\n                <VaDivider v-if=\"index !== plans.length - 1\" />\n            </template>\n        </VaCardContent>\n    </VaCard>\n</template>\n\n<script lang=\"ts\" setup>\nimport { useToast } from 'vuestic-ui'\nimport { reactive } from 'vue'\n\nconst { init } = useToast()\n\ntype MembershipTier = {\n    id: string\n    name: string\n    type: 'upgrade' | 'downgrade' | 'current'\n    padletsUsed: number\n    padletsTotal: string\n    priceMonth?: string\n    priceYear?: string\n    uploadLimit: string\n}\n\nconst plans = reactive<MembershipTier[]>([\n    {\n        id: '1',\n        name: 'Platinum',\n        type: 'upgrade',\n        padletsUsed: 0,\n        padletsTotal: 'Unlimited',\n        priceMonth: '$9.99',\n        priceYear: '$99.99',\n        uploadLimit: '500MB',\n    },\n    {\n        id: '2',\n        name: 'Gold',\n        type: 'current',\n        padletsUsed: 19,\n        padletsTotal: '20',\n        priceMonth: '$6.99',\n        priceYear: '$69.99',\n        uploadLimit: '100MB',\n    },\n    {\n        id: '3',\n        name: 'Neon',\n        type: 'downgrade',\n        padletsUsed: 0,\n        padletsTotal: '3',\n        priceMonth: undefined,\n        priceYear: undefined,\n        uploadLimit: '20MB',\n    },\n])\n\nconst switchPlan = (planId: string) => {\n    plans.forEach((item, index) => {\n        if (item.id === planId) {\n            // Set the selected plan to 'current'\n            item.type = 'current'\n        } else {\n            // Determine if other plans are an 'upgrade' or 'downgrade'\n            const selectedIndex = plans.findIndex((plan) => plan.id === planId)\n            item.type = index < selectedIndex ? 'upgrade' : 'downgrade'\n        }\n    })\n    init({\n        message: \"You've successfully changed the membership tier\",\n        color: 'success',\n    })\n}\n</script>\n","<template>\n    <VaModal\n        :mobile-fullscreen=\"false\"\n        size=\"small\"\n        max-width=\"380px\"\n        hide-default-actions\n        model-value\n        close-button\n        @update:modelValue=\"emits('cancel')\"\n    >\n        <div class=\"space-y-6\">\n            <h3>\n                Are you sure you want to switch to the\n                <span class=\"font-bold text-primary\">{{ yearlyPlan ? 'monthly' : 'annual' }}</span>\n                plan?\n            </h3>\n            <div class=\"flex flex-col-reverse md:justify-end md:flex-row md:space-x-4\">\n                <VaButton preset=\"secondary\" color=\"secondary\" @click=\"emits('cancel')\"> Cancel</VaButton>\n                <VaButton class=\"mb-4 md:mb-0\" @click=\"confirm()\"> Update Plan</VaButton>\n            </div>\n        </div>\n    </VaModal>\n</template>\n<script lang=\"ts\" setup>\nimport { useToast } from 'vuestic-ui'\n\nconst { init } = useToast()\n\ndefineProps({\n    yearlyPlan: {\n        type: Boolean,\n        required: true,\n    },\n})\n\nconst emits = defineEmits(['cancel', 'confirm'])\n\nconst confirm = () => {\n    init({ message: \"You've successfully changed your payment plan\", color: 'success' })\n    emits('confirm')\n}\n</script>\n\n<style lang=\"scss\">\n.va-modal__inner {\n    min-width: 326px;\n}\n</style>\n","<template>\n    <VaCard class=\"mb-6\">\n        <VaCardContent>\n            <h2 class=\"page-sub-title\">Payment info</h2>\n\n            <div class=\"flex items-center justify-between md:justify-items-stretch\">\n                <div\n                    class=\"flex grow flex-col space-y-2 md:flex-row md:space-y-0 md:space-x-1 justify-between items-start md:items-center\"\n                >\n                    <div class=\"md:w-48\">\n                        <p class=\"mb-1\">Payment plan</p>\n                        <p class=\"font-bold\">\n                            {{ paymentPlan.isYearly ? paymentPlan.priceYear : paymentPlan.priceMonth }}&nbsp;/{{\n                                paymentPlan.isYearly ? 'yearly' : 'monthly'\n                            }}\n                        </p>\n                    </div>\n                </div>\n\n                <div class=\"md:w-48 flex flex-col justify-end items-end\">\n                    <VaButton preset=\"primary\" @click=\"togglePaymentPlanModal\">\n                        Switch to {{ paymentPlan.isYearly ? 'monthly' : 'annual' }}\n                    </VaButton>\n\n                    <div v-if=\"!paymentPlan.isYearly\" class=\"mt-2 text-regularSmall\">\n                        <span>{{ paymentPlan.priceYear }}&nbsp;/year</span>\n                        <span class=\"text-danger ml-1\">save 16%</span>\n                    </div>\n                </div>\n            </div>\n\n            <template v-if=\"paymentCard\">\n                <VaDivider />\n\n                <div class=\"flex items-center justify-between md:justify-items-stretch\">\n                    <div\n                        class=\"flex grow flex-col space-y-2 md:flex-row md:space-y-0 md:space-x-1 justify-between items-start md:items-center\"\n                    >\n                        <div class=\"md:w-48\">\n                            <p class=\"mb-1\">Payment method</p>\n                            <p class=\"font-bold capitalize\">\n                                {{ paymentCard.paymentSystem }} {{ paymentCard.cardNumberMasked }}\n                            </p>\n                        </div>\n                    </div>\n                    <div class=\"md:w-48 flex justify-end\">\n                        <VaButton :to=\"{ name: 'payment-methods' }\" preset=\"primary\">Payment preferences</VaButton>\n                    </div>\n                </div>\n            </template>\n        </VaCardContent>\n    </VaCard>\n\n    <ChangeYourPaymentPlan\n        v-if=\"isChangeYourPaymentPlanModalOpen\"\n        :yearly-plan=\"paymentPlan.isYearly\"\n        @confirm=\"updatePaymentPlan\"\n        @cancel=\"togglePaymentPlanModal\"\n    />\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, ref } from 'vue'\nimport { usePaymentCardsStore } from '../../stores/payment-cards'\n\nimport ChangeYourPaymentPlan from './modals/ChangeYourPaymentPlan.vue'\n\nconst paymentPlan = ref({\n    id: '1',\n    name: 'Gold',\n    isYearly: false,\n    type: 'current',\n    padletsUsed: 19,\n    padletsTotal: '20',\n    priceMonth: '$6.99',\n    priceYear: '$69.99',\n    switchToYearlySave: '16%',\n    uploadLimit: '100MB',\n})\n\nconst cardStore = usePaymentCardsStore()\n\nconst isChangeYourPaymentPlanModalOpen = ref(false)\n\nconst paymentCard = computed(() => cardStore.currentPaymentCard)\nconst togglePaymentPlanModal = () => {\n    isChangeYourPaymentPlanModalOpen.value = !isChangeYourPaymentPlanModalOpen.value\n}\n\nconst updatePaymentPlan = () => {\n    paymentPlan.value.isYearly = !paymentPlan.value.isYearly\n    isChangeYourPaymentPlanModalOpen.value = false\n}\n</script>\n","<template>\n    <VaCard class=\"mb-6\">\n        <VaCardContent>\n            <h2 class=\"page-sub-title\">Invoices</h2>\n            <template v-for=\"(item, index) in itemsInView\" :key=\"item.id\">\n                <div class=\"flex items-center justify-between md:justify-items-stretch\">\n                    <div class=\"flex items-center w-48\">\n                        {{ item.date }}\n                    </div>\n                    <div class=\"w-20\">\n                        {{ item.amount }}\n                    </div>\n                    <div>\n                        <VaButton preset=\"primary\" @click=\"download\">Download</VaButton>\n                    </div>\n                </div>\n\n                <VaDivider v-if=\"index !== itemsInView.length - 1\" />\n            </template>\n        </VaCardContent>\n        <VaCardActions vertical class=\"flex flex-wrap content-center mt-4\">\n            <VaButton\n                v-if=\"numberOfInvoicesInVIew < maxNumberOfInvoices\"\n                preset=\"primary\"\n                @click=\"increaseNumberOfInvoices()\"\n                >Show more\n            </VaButton>\n            <VaButton v-else preset=\"primary\" @click=\"numberOfInvoicesInVIew = minNumberOfInvoices\"\n                >Show less\n            </VaButton>\n        </VaCardActions>\n    </VaCard>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, ref } from 'vue'\nimport { useToast } from 'vuestic-ui'\nimport { useI18n } from 'vue-i18n'\n\nconst { init } = useToast()\nconst { locale } = useI18n()\n\nconst minNumberOfInvoices = 7\nconst maxNumberOfInvoices = 20\n\nconst numberOfInvoicesInVIew = ref(minNumberOfInvoices)\n\nconst increaseNumberOfInvoices = (step = 10) => {\n    numberOfInvoicesInVIew.value = Math.min(numberOfInvoicesInVIew.value + step, maxNumberOfInvoices)\n}\n\nfunction getRandomDateInBetween(start: string, end: string): Date {\n    const startDate = Date.parse(start)\n    const endDate = Date.parse(end)\n\n    return new Date(Math.floor(Math.random() * (endDate - startDate + 1) + startDate))\n}\n\nfunction getLanguageCode(): string {\n    const countryCodeToLanguageCodeMapping: Record<any, string> = {\n        br: 'pt',\n        cn: 'zh-CN',\n        gb: 'en-GB',\n        ir: 'fa',\n    }\n\n    return countryCodeToLanguageCodeMapping[locale.value] || 'en-GB'\n}\n\nfunction getRandomDateString(): string {\n    const startDate = '2020-01-01'\n    const endDate = '2023-12-01'\n\n    const dateFormatOptions: Intl.DateTimeFormatOptions = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n    }\n\n    return getRandomDateInBetween(startDate, endDate).toLocaleDateString(getLanguageCode(), dateFormatOptions)\n}\n\nconst allItems = Array.from({ length: maxNumberOfInvoices }, (_, i) => ({\n    id: i,\n    date: getRandomDateString(),\n    amount: `$${(Math.random() * 100).toFixed(2)}`,\n}))\n\nconst itemsInView = computed(() => {\n    return allItems.slice(0, numberOfInvoicesInVIew.value)\n})\n\nconst download = () => {\n    init({\n        message: \"Request received. We'll email your invoice once we've completed data collection.\",\n        color: 'success',\n    })\n}\n</script>\n","<template>\n    <h1 class=\"h1\">Billing information</h1>\n\n    <VaSkeletonGroup v-if=\"cardStore.loading\">\n        <VaSkeleton class=\"mb-4\" height=\"160px\" variant=\"squared\" />\n        <VaSkeleton class=\"mb-4\" height=\"160px\" variant=\"squared\" />\n        <VaSkeleton height=\"360px\" variant=\"squared\" />\n    </VaSkeletonGroup>\n\n    <template v-else>\n        <MembeshipTier />\n        <PaymentInfo />\n        <Invoices />\n    </template>\n</template>\n\n<script lang=\"ts\" setup>\nimport MembeshipTier from './MembeshipTier.vue'\nimport PaymentInfo from './PaymentInfo.vue'\nimport { usePaymentCardsStore } from '../../stores/payment-cards'\nimport Invoices from './Invoices.vue'\n\nconst cardStore = usePaymentCardsStore()\ncardStore.load()\n</script>\n"],"names":["init","useToast","plans","reactive","switchPlan","planId","item","index","selectedIndex","plan","emits","__emit","confirm","paymentPlan","ref","cardStore","usePaymentCardsStore","isChangeYourPaymentPlanModalOpen","paymentCard","computed","togglePaymentPlanModal","updatePaymentPlan","minNumberOfInvoices","maxNumberOfInvoices","locale","useI18n","numberOfInvoicesInVIew","increaseNumberOfInvoices","step","getRandomDateInBetween","start","end","startDate","endDate","getLanguageCode","getRandomDateString","dateFormatOptions","allItems","_","i","itemsInView","download"],"mappings":"8wBA0CM,KAAA,CAAE,KAAAA,GAASC,IAaXC,EAAQC,EAA2B,CACrC,CACI,GAAI,IACJ,KAAM,WACN,KAAM,UACN,YAAa,EACb,aAAc,YACd,WAAY,QACZ,UAAW,SACX,YAAa,OACjB,EACA,CACI,GAAI,IACJ,KAAM,OACN,KAAM,UACN,YAAa,GACb,aAAc,KACd,WAAY,QACZ,UAAW,SACX,YAAa,OACjB,EACA,CACI,GAAI,IACJ,KAAM,OACN,KAAM,YACN,YAAa,EACb,aAAc,IACd,WAAY,OACZ,UAAW,OACX,YAAa,MACjB,CAAA,CACH,EAEKC,EAAcC,GAAmB,CAC7BH,EAAA,QAAQ,CAACI,EAAMC,IAAU,CACvB,GAAAD,EAAK,KAAOD,EAEZC,EAAK,KAAO,cACT,CAEH,MAAME,EAAgBN,EAAM,UAAWO,GAASA,EAAK,KAAOJ,CAAM,EAC7DC,EAAA,KAAOC,EAAQC,EAAgB,UAAY,WACpD,CAAA,CACH,EACIR,EAAA,CACD,QAAS,kDACT,MAAO,SAAA,CACV,CAAA,gvCC5EC,KAAA,CAAE,KAAAA,GAASC,IASXS,EAAQC,EAERC,EAAU,IAAM,CAClBZ,EAAK,CAAE,QAAS,gDAAiD,MAAO,SAAW,CAAA,EACnFU,EAAM,SAAS,CAAA,w9CC4BnB,MAAMG,EAAcC,EAAI,CACpB,GAAI,IACJ,KAAM,OACN,SAAU,GACV,KAAM,UACN,YAAa,GACb,aAAc,KACd,WAAY,QACZ,UAAW,SACX,mBAAoB,MACpB,YAAa,OAAA,CAChB,EAEKC,EAAYC,IAEZC,EAAmCH,EAAI,EAAK,EAE5CI,EAAcC,EAAS,IAAMJ,EAAU,kBAAkB,EACzDK,EAAyB,IAAM,CACAH,EAAA,MAAQ,CAACA,EAAiC,KAAA,EAGzEI,EAAoB,IAAM,CAC5BR,EAAY,MAAM,SAAW,CAACA,EAAY,MAAM,SAChDI,EAAiC,MAAQ,EAAA,0nCCjDvCK,EAAsB,EACtBC,EAAsB,oCAJtB,KAAA,CAAE,KAAAvB,GAASC,IACX,CAAE,OAAAuB,GAAWC,IAKbC,EAAyBZ,EAAIQ,CAAmB,EAEhDK,EAA2B,CAACC,EAAO,KAAO,CAC5CF,EAAuB,MAAQ,KAAK,IAAIA,EAAuB,MAAQE,EAAML,CAAmB,CAAA,EAG3F,SAAAM,EAAuBC,EAAeC,EAAmB,CACxD,MAAAC,EAAY,KAAK,MAAMF,CAAK,EAC5BG,EAAU,KAAK,MAAMF,CAAG,EAEvB,OAAA,IAAI,KAAK,KAAK,MAAM,KAAK,UAAYE,EAAUD,EAAY,GAAKA,CAAS,CAAC,CACrF,CAEA,SAASE,GAA0B,CAQxB,MAPuD,CAC1D,GAAI,KACJ,GAAI,QACJ,GAAI,QACJ,GAAI,IAAA,EAGgCV,EAAO,KAAK,GAAK,OAC7D,CAEA,SAASW,GAA8B,CACnC,MAAMH,EAAY,aACZC,EAAU,aAEVG,EAAgD,CAClD,KAAM,UACN,MAAO,OACP,IAAK,SAAA,EAGT,OAAOP,EAAuBG,EAAWC,CAAO,EAAE,mBAAmBC,EAAA,EAAmBE,CAAiB,CAC7G,CAEM,MAAAC,EAAW,MAAM,KAAK,CAAE,OAAQd,CAAoB,EAAG,CAACe,EAAGC,KAAO,CACpE,GAAIA,EACJ,KAAMJ,EAAoB,EAC1B,OAAQ,KAAK,KAAK,SAAW,KAAK,QAAQ,CAAC,CAAC,EAC9C,EAAA,EAEIK,EAAcrB,EAAS,IAClBkB,EAAS,MAAM,EAAGX,EAAuB,KAAK,CACxD,EAEKe,EAAW,IAAM,CACdzC,EAAA,CACD,QAAS,mFACT,MAAO,SAAA,CACV,CAAA,g2BC1EL,MAAMe,EAAYC,IAClB,OAAAD,EAAU,KAAK"}