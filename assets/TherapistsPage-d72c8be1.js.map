{"version":3,"file":"TherapistsPage-d72c8be1.js","sources":["../../src/pages/therapists/widgets/TherapistAvatar.vue","../../src/pages/therapists/widgets/TherapistsTable.vue","../../src/pages/therapists/widgets/EditTherapistForm.vue","../../src/data/pages/therapists.ts","../../src/pages/therapists/composables/useTherapists.ts","../../src/pages/therapists/TherapistsPage.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { PropType } from 'vue'\nimport { Therapist } from '../types'\n\nconst avatarColor = (therapistName: string) => {\n    const colors = ['primary', '#FFD43A', '#ADFF00', '#262824', 'danger']\n    const index = therapistName.charCodeAt(0) % colors.length\n    return colors[index]\n}\n\ndefineProps({\n    therapist: {\n        type: Object as PropType<Therapist>,\n        required: true,\n    },\n    size: {\n        type: String,\n        default: 'medium',\n    },\n})\n\nconst isUrl = (avatar: string) => {\n    return avatar.startsWith('http') || avatar.startsWith('blob:')\n}\n</script>\n\n<template>\n    <VaAvatar\n        :size=\"size\"\n        :src=\"isUrl(therapist.coverImage) ? therapist.coverImage : ''\"\n        :fallback-text=\"therapist.coverImage || therapist.name[0]\"\n        :color=\"avatarColor(therapist.name)\"\n    />\n</template>\n","<script setup lang=\"ts\">\nimport { defineVaDataTableColumns, useModal } from 'vuestic-ui'\nimport { Therapist } from '../types'\nimport TherapistAvatar from './TherapistAvatar.vue'\nimport { PropType, computed, toRef } from 'vue'\nimport { Pagination, Sorting } from '../../../data/pages/therapists'\nimport { useVModel } from '@vueuse/core'\n\nconst columns = defineVaDataTableColumns([\n    { label: 'Number', key: 'number', sortable: true },\n    { label: 'Name', key: 'name', sortable: true },\n    { label: 'Sort Order', key: 'sortOrder', sortable: true },\n    { label: ' ', key: 'actions', align: 'right' },\n])\n\nconst props = defineProps({\n    therapists: {\n        type: Array as PropType<Therapist[]>,\n        required: true,\n    },\n    loading: { type: Boolean, default: false },\n    pagination: { type: Object as PropType<Pagination>, required: true },\n    sortBy: { type: String as PropType<Sorting['sortBy']>, required: true },\n    sortingOrder: { type: String as PropType<Sorting['sortingOrder']>, required: true },\n})\n\nconst emit = defineEmits<{\n    (event: 'edit-therapist', therapist: Therapist): void\n    (event: 'delete-therapist', therapist: Therapist): void\n    (event: 'update:sortBy', sortBy: Sorting['sortBy']): void\n    (event: 'update:sortingOrder', sortingOrder: Sorting['sortingOrder']): void\n}>()\n\nconst therapists = toRef(props, 'therapists')\nconst sortByVModel = useVModel(props, 'sortBy', emit)\nconst sortingOrderVModel = useVModel(props, 'sortingOrder', emit)\n\nconst totalPages = computed(() => Math.ceil(props.pagination.total / props.pagination.perPage))\n\nconst { confirm } = useModal()\n\nconst onTherapistDelete = async (therapist: Therapist) => {\n    const agreed = await confirm({\n        title: 'Delete therapist',\n        message: `Are you sure you want to delete ${therapist.name}?`,\n        okText: 'Delete',\n        cancelText: 'Cancel',\n        size: 'small',\n        maxWidth: '380px',\n    })\n\n    if (agreed) {\n        emit('delete-therapist', therapist)\n    }\n}\n</script>\n\n<template>\n    <VaDataTable\n        v-model:sort-by=\"sortByVModel\"\n        v-model:sorting-order=\"sortingOrderVModel\"\n        :columns=\"columns\"\n        :items=\"therapists\"\n        :loading=\"$props.loading\"\n    >\n        <template #cell(number)=\"{ rowData }\">\n            <div class=\"font-semibold\">\n                {{ rowData.number }}\n            </div>\n        </template>\n\n        <template #cell(name)=\"{ rowData }\">\n            <div class=\"flex items-center gap-2 max-w-[230px] ellipsis\">\n                <TherapistAvatar :therapist=\"rowData as Therapist\" size=\"small\" />\n                {{ rowData.name }}\n            </div>\n        </template>\n\n        <template #cell(sortOrder)=\"{ rowData }\">\n            <div class=\"text-center font-mono\">\n                {{ rowData.sortOrder }}\n            </div>\n        </template>\n\n        <template #cell(actions)=\"{ rowData }\">\n            <div class=\"flex gap-2 justify-end\">\n                <VaButton\n                    preset=\"primary\"\n                    size=\"small\"\n                    icon=\"mso-edit\"\n                    aria-label=\"Edit therapist\"\n                    @click=\"$emit('edit-therapist', rowData as Therapist)\"\n                />\n                <VaButton\n                    preset=\"primary\"\n                    size=\"small\"\n                    icon=\"mso-delete\"\n                    color=\"danger\"\n                    aria-label=\"Delete therapist\"\n                    @click=\"onTherapistDelete(rowData as Therapist)\"\n                />\n            </div>\n        </template>\n    </VaDataTable>\n\n    <div class=\"flex flex-col-reverse md:flex-row gap-2 justify-between items-center py-2\">\n        <div>\n            <b>{{ $props.pagination.total }} results.</b>\n            Results per page\n            <VaSelect v-model=\"$props.pagination.perPage\" class=\"!w-20\" :options=\"[10, 50, 100]\" />\n        </div>\n\n        <div v-if=\"totalPages > 1\" class=\"flex\">\n            <VaButton\n                preset=\"secondary\"\n                icon=\"va-arrow-left\"\n                aria-label=\"Previous page\"\n                :disabled=\"$props.pagination.page === 1\"\n                @click=\"$props.pagination.page--\"\n            />\n            <VaButton\n                class=\"mr-2\"\n                preset=\"secondary\"\n                icon=\"va-arrow-right\"\n                aria-label=\"Next page\"\n                :disabled=\"$props.pagination.page === totalPages\"\n                @click=\"$props.pagination.page++\"\n            />\n            <VaPagination\n                v-model=\"$props.pagination.page\"\n                buttons-preset=\"secondary\"\n                :pages=\"totalPages\"\n                :visible-pages=\"5\"\n                :boundary-links=\"false\"\n                :direction-links=\"false\"\n            />\n        </div>\n    </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.va-data-table {\n    ::v-deep(.va-data-table__table-tr) {\n        border-bottom: 1px solid var(--va-background-border);\n    }\n}\n</style>\n","<script setup lang=\"ts\">\nimport { PropType, computed, ref, watch } from 'vue'\nimport { useForm } from 'vuestic-ui'\nimport { Therapist } from '../types'\nimport TherapistAvatar from './TherapistAvatar.vue'\nimport { validators } from '../../../services/utils'\n\nconst props = defineProps({\n    therapist: {\n        type: Object as PropType<Therapist | null>,\n        default: null,\n    },\n    saveButtonLabel: {\n        type: String,\n        default: 'Save',\n    },\n})\n\nconst defaultNewTherapist: Therapist = {\n    id: -1,\n    number: 0,\n    name: '',\n    coverImage: '',\n    images: [],\n    height: undefined,\n    weight: undefined,\n    birthYear: undefined,\n    description: '',\n    technicalLevel: '',\n    removal: '',\n    serviceMedal: '',\n    note: '',\n    recommendRank: '',\n    paymentNote: '',\n    sortOrder: 0,\n    // 向後兼容字段\n    email: '',\n    username: '',\n    avatar: '',\n    active: true,\n}\n\nconst newTherapist = ref<Therapist>({ ...defaultNewTherapist })\n\nconst isFormHasUnsavedChanges = computed(() => {\n    return Object.keys(newTherapist.value).some((key) => {\n        if (key === 'avatar' || key === 'images') {\n            return false\n        }\n\n        return (\n            newTherapist.value[key as keyof Therapist] !==\n            (props.therapist ?? defaultNewTherapist)?.[key as keyof Therapist]\n        )\n    })\n})\n\ndefineExpose({\n    isFormHasUnsavedChanges,\n})\n\nwatch(\n    () => props.therapist,\n    () => {\n        if (!props.therapist) {\n            return\n        }\n\n        newTherapist.value = {\n            ...props.therapist,\n            avatar: props.therapist.avatar || '',\n        }\n    },\n    { immediate: true },\n)\n\nconst avatar = ref<File>()\nconst originalImages = ref<File[]>([])\n\nconst makeAvatarBlobUrl = (avatar: File) => {\n    return URL.createObjectURL(avatar)\n}\n\nconst makeImageBlobUrl = (image: File) => {\n    return URL.createObjectURL(image)\n}\n\nwatch(avatar, (newAvatar) => {\n    newTherapist.value.avatar = newAvatar ? makeAvatarBlobUrl(newAvatar) : ''\n})\n\nconst form = useForm('add-therapist-form')\n\nconst emit = defineEmits(['close', 'save'])\n\nconst onSave = () => {\n    if (form.validate()) {\n        emit('save', newTherapist.value)\n    }\n}\n</script>\n\n<template>\n    <VaForm\n        v-slot=\"{ isValid }\"\n        ref=\"add-therapist-form\"\n        class=\"flex-col justify-start items-start gap-4 inline-flex w-full\"\n    >\n        <VaFileUpload\n            v-model=\"avatar\"\n            type=\"single\"\n            hide-file-list\n            class=\"self-stretch justify-start items-center gap-4 inline-flex\"\n        >\n            <TherapistAvatar :therapist=\"newTherapist\" size=\"large\" />\n            <VaButton preset=\"primary\" size=\"small\">Add image</VaButton>\n            <VaButton\n                v-if=\"avatar\"\n                preset=\"primary\"\n                color=\"danger\"\n                size=\"small\"\n                icon=\"delete\"\n                class=\"z-10\"\n                @click.stop=\"avatar = undefined\"\n            />\n        </VaFileUpload>\n        <div class=\"self-stretch flex-col justify-start items-start gap-4 flex\">\n            <div class=\"flex gap-4 flex-col sm:flex-row w-full\">\n                <VaInput\n                    v-model=\"newTherapist.name\"\n                    label=\"名稱\"\n                    class=\"w-full sm:w-1/2\"\n                    :rules=\"[validators.required]\"\n                    name=\"name\"\n                />\n                <VaInput\n                    v-model=\"newTherapist.number\"\n                    label=\"號碼\"\n                    class=\"w-full sm:w-1/2\"\n                    :rules=\"[validators.required]\"\n                    name=\"number\"\n                    type=\"number\"\n                />\n            </div>\n            <div class=\"flex gap-4 flex-col sm:flex-row w-full\">\n                <VaInput\n                    v-model=\"newTherapist.height\"\n                    label=\"身高 (cm)\"\n                    class=\"w-full sm:w-1/2\"\n                    name=\"height\"\n                    type=\"number\"\n                />\n                <VaInput\n                    v-model=\"newTherapist.weight\"\n                    label=\"體重 (kg)\"\n                    class=\"w-full sm:w-1/2\"\n                    name=\"weight\"\n                    type=\"number\"\n                />\n            </div>\n            <div class=\"flex gap-4 flex-col sm:flex-row w-full\">\n                <VaInput\n                    v-model=\"newTherapist.birthYear\"\n                    label=\"出生年份\"\n                    class=\"w-full sm:w-1/2\"\n                    name=\"birthYear\"\n                    type=\"number\"\n                />\n                <VaInput\n                    v-model=\"newTherapist.technicalLevel\"\n                    label=\"技術級別\"\n                    class=\"w-full sm:w-1/2\"\n                    name=\"technicalLevel\"\n                />\n            </div>\n            <div class=\"flex gap-4 flex-col sm:flex-row w-full\">\n                <VaInput\n                    v-model=\"newTherapist.serviceMedal\"\n                    label=\"服務獎章\"\n                    class=\"w-full sm:w-1/2\"\n                    name=\"serviceMedal\"\n                />\n                <VaInput\n                    v-model=\"newTherapist.recommendRank\"\n                    label=\"推薦指數\"\n                    class=\"w-full sm:w-1/2\"\n                    name=\"recommendRank\"\n                />\n            </div>\n\n            <!-- 複數相片上傳 -->\n            <div class=\"w-full\">\n                <label class=\"va-input-label\">相片集</label>\n                <VaFileUpload\n                    v-model=\"originalImages\"\n                    type=\"gallery\"\n                    file-types=\"image/*\"\n                    class=\"w-full\"\n                    hide-file-list\n                >\n                    <VaButton preset=\"primary\" size=\"small\">上傳相片</VaButton>\n                </VaFileUpload>\n\n                <!-- 顯示已上傳的相片縮圖 -->\n                <div v-if=\"originalImages.length > 0\" class=\"flex flex-wrap gap-2 mt-4\">\n                    <div\n                        v-for=\"(image, index) in originalImages\"\n                        :key=\"index\"\n                        class=\"relative w-20 h-20 border border-gray-300 rounded overflow-hidden\"\n                    >\n                        <img\n                            :src=\"makeImageBlobUrl(image)\"\n                            :alt=\"`Photo ${index + 1}`\"\n                            class=\"w-full h-full object-cover\"\n                        />\n                        <VaButton\n                            preset=\"primary\"\n                            color=\"danger\"\n                            size=\"small\"\n                            icon=\"delete\"\n                            class=\"absolute top-1 right-1 w-6 h-6 min-w-0 p-0\"\n                            @click=\"originalImages.splice(index, 1)\"\n                        />\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"flex gap-4 w-full\">\n                <div class=\"flex items-center w-1/2 mt-4\">\n                    <VaCheckbox v-model=\"newTherapist.active\" label=\"Active\" class=\"w-full\" name=\"active\" />\n                </div>\n            </div>\n\n            <VaTextarea v-model=\"newTherapist.description\" label=\"Description\" class=\"w-full\" name=\"description\" />\n            <VaTextarea v-model=\"newTherapist.note\" label=\"Notes\" class=\"w-full\" name=\"note\" />\n            <VaTextarea v-model=\"newTherapist.paymentNote\" label=\"Payment Note\" class=\"w-full\" name=\"paymentNote\" />\n\n            <div class=\"flex gap-4 flex-col sm:flex-row w-full\">\n                <VaInput\n                    v-model=\"newTherapist.sortOrder\"\n                    label=\"Sort Order\"\n                    class=\"w-full sm:w-1/2\"\n                    :rules=\"[validators.required]\"\n                    name=\"sortOrder\"\n                    type=\"number\"\n                />\n                <VaInput v-model=\"newTherapist.removal\" label=\"Removal Status\" class=\"w-full sm:w-1/2\" name=\"removal\" />\n            </div>\n            <div class=\"flex gap-2 flex-col-reverse items-stretch justify-end w-full sm:flex-row sm:items-center\">\n                <VaButton preset=\"secondary\" color=\"secondary\" @click=\"$emit('close')\">Cancel</VaButton>\n                <VaButton :disabled=\"!isValid\" @click=\"onSave\">{{ saveButtonLabel }}</VaButton>\n            </div>\n        </div>\n    </VaForm>\n</template>\n","import { sleep } from '../../services/utils'\nimport { Therapist } from './../../pages/therapists/types'\nimport therapistsDb from './therapists-db.json'\nimport api from '../../services/api'\nexport const therapists = therapistsDb as Therapist[]\n\n// Simulate API calls\n\nexport type Pagination = {\n    page: number\n    perPage: number\n    total: number\n}\n\nexport type Sorting = {\n    sortBy: keyof Therapist | undefined\n    sortingOrder: 'asc' | 'desc' | null\n}\n\nexport type Filters = {\n    isActive: boolean\n    search: string\n}\n\nconst getSortItem = (obj: any, sortBy: string) => {\n    if (sortBy === 'projects') {\n        return obj.projects.map((project: any) => project.project_name).join(', ')\n    }\n\n    return obj[sortBy]\n}\n\nexport const getTherapists = async (filters: Partial<Filters & Pagination & Sorting>) => {\n    // await sleep(1000)\n    try {\n        await api.getTherapists(filters)\n    } catch (error) {\n        console.error('Error fetching therapists:', error)\n    }\n    const { isActive, search, sortBy, sortingOrder } = filters\n    let filteredTherapists = [...therapists]\n\n    filteredTherapists = filteredTherapists.filter((therapist) => therapist.active === isActive)\n\n    if (search) {\n        filteredTherapists = filteredTherapists.filter((therapist) =>\n            therapist.name.toLowerCase().includes(search.toLowerCase()),\n        )\n    }\n\n    // Add empty projects array for now\n    filteredTherapists = filteredTherapists.map((therapist) => ({\n        ...therapist,\n        projects: [],\n    }))\n\n    if (sortBy && sortingOrder) {\n        filteredTherapists = filteredTherapists.sort((a, b) => {\n            const first = getSortItem(a, sortBy)\n            const second = getSortItem(b, sortBy)\n            if (first > second) {\n                return sortingOrder === 'asc' ? 1 : -1\n            }\n            if (first < second) {\n                return sortingOrder === 'asc' ? -1 : 1\n            }\n            return 0\n        })\n    }\n\n    const { page = 1, perPage = 10 } = filters || {}\n    return {\n        data: filteredTherapists.slice((page - 1) * perPage, page * perPage),\n        pagination: {\n            page,\n            perPage,\n            total: filteredTherapists.length,\n        },\n    }\n}\n\nexport const addTherapist = async (therapist: Therapist) => {\n    await sleep(1000)\n    therapists.unshift(therapist)\n}\n\nexport const updateTherapist = async (therapist: Therapist) => {\n    await sleep(1000)\n    const index = therapists.findIndex((t) => t.id === therapist.id)\n    therapists[index] = therapist\n}\n\nexport const removeTherapist = async (therapist: Therapist) => {\n    await sleep(1000)\n    therapists.splice(\n        therapists.findIndex((t) => t.id === therapist.id),\n        1,\n    )\n}\n","import { Ref, ref, unref, watch } from 'vue'\nimport {\n    getTherapists,\n    updateTherapist,\n    addTherapist,\n    removeTherapist,\n    type Filters,\n    Pagination,\n    Sorting,\n} from '../../../data/pages/therapists'\nimport { Therapist } from '../types'\nimport { watchIgnorable } from '@vueuse/core'\n\nconst makePaginationRef = () => ref<Pagination>({ page: 1, perPage: 10, total: 0 })\nconst makeSortingRef = () => ref<Sorting>({ sortBy: 'fullname', sortingOrder: null })\nconst makeFiltersRef = () => ref<Partial<Filters>>({ isActive: true, search: '' })\n\nexport const useTherapists = (options?: {\n    pagination?: Ref<Pagination>\n    sorting?: Ref<Sorting>\n    filters?: Ref<Partial<Filters>>\n}) => {\n    const isLoading = ref(false)\n    const therapists = ref<Therapist[]>([])\n\n    const { filters = makeFiltersRef(), sorting = makeSortingRef(), pagination = makePaginationRef() } = options || {}\n\n    const fetch = async () => {\n        isLoading.value = true\n        const { data, pagination: newPagination } = await getTherapists({\n            ...unref(filters),\n            ...unref(sorting),\n            ...unref(pagination),\n        })\n        therapists.value = data\n\n        ignoreUpdates(() => {\n            pagination.value = newPagination\n        })\n\n        isLoading.value = false\n    }\n\n    const { ignoreUpdates } = watchIgnorable([pagination, sorting], fetch, { deep: true })\n\n    watch(\n        filters,\n        () => {\n            // Reset pagination to first page when filters changed\n            pagination.value.page = 1\n            fetch()\n        },\n        { deep: true },\n    )\n\n    fetch()\n\n    return {\n        isLoading,\n\n        filters,\n        sorting,\n        pagination,\n\n        therapists,\n\n        fetch,\n\n        async add(therapist: Therapist) {\n            isLoading.value = true\n            await addTherapist(therapist)\n            await fetch()\n            isLoading.value = false\n        },\n\n        async update(therapist: Therapist) {\n            isLoading.value = true\n            await updateTherapist(therapist)\n            await fetch()\n            isLoading.value = false\n        },\n\n        async remove(therapist: Therapist) {\n            isLoading.value = true\n            await removeTherapist(therapist)\n            await fetch()\n            isLoading.value = false\n        },\n    }\n}\n","<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport TherapistsTable from './widgets/TherapistsTable.vue'\nimport EditTherapistForm from './widgets/EditTherapistForm.vue'\nimport { Therapist } from './types'\nimport { useTherapists } from './composables/useTherapists'\nimport { useModal, useToast } from 'vuestic-ui'\n\nconst doShowEditTherapistModal = ref(false)\n\nconst { therapists, isLoading, filters, sorting, pagination, ...therapistsApi } = useTherapists()\n\nconst therapistToEdit = ref<Therapist | null>(null)\n\nconst showEditTherapistModal = (therapist: Therapist) => {\n    therapistToEdit.value = therapist\n    doShowEditTherapistModal.value = true\n}\n\nconst showAddTherapistModal = () => {\n    therapistToEdit.value = null\n    doShowEditTherapistModal.value = true\n}\n\nconst { init: notify } = useToast()\n\nconst onTherapistSaved = async (therapist: Therapist) => {\n    if (therapistToEdit.value) {\n        await therapistsApi.update(therapist)\n        notify({\n            message: `${therapist.fullname} has been updated`,\n            color: 'success',\n        })\n    } else {\n        therapistsApi.add(therapist)\n        notify({\n            message: `${therapist.fullname} has been created`,\n            color: 'success',\n        })\n    }\n}\n\nconst onTherapistDelete = async (therapist: Therapist) => {\n    await therapistsApi.remove(therapist)\n    notify({\n        message: `${therapist.fullname} has been deleted`,\n        color: 'success',\n    })\n}\n\nconst editFormRef = ref()\n\nconst { confirm } = useModal()\n\nconst beforeEditFormModalClose = async (hide: () => unknown) => {\n    if (editFormRef.value.isFormHasUnsavedChanges) {\n        const agreed = await confirm({\n            maxWidth: '380px',\n            message: 'Form has unsaved changes. Are you sure you want to close it?',\n            size: 'small',\n        })\n        if (agreed) {\n            hide()\n        }\n    } else {\n        hide()\n    }\n}\n</script>\n\n<template>\n    <h1 class=\"page-title\">龍筋技師</h1>\n\n    <VaCard>\n        <VaCardContent>\n            <div class=\"flex flex-col md:flex-row gap-2 mb-2 justify-between\">\n                <div class=\"flex flex-col md:flex-row gap-2 justify-start\">\n                    <VaButtonToggle\n                        v-model=\"filters.isActive\"\n                        color=\"background-element\"\n                        border-color=\"background-element\"\n                        :options=\"[\n                            { label: 'Active', value: true },\n                            { label: 'Inactive', value: false },\n                        ]\"\n                    />\n                    <VaInput v-model=\"filters.search\" placeholder=\"Search\">\n                        <template #prependInner>\n                            <VaIcon name=\"search\" color=\"secondary\" size=\"small\" />\n                        </template>\n                    </VaInput>\n                </div>\n                <VaButton @click=\"showAddTherapistModal\">Add Therapist</VaButton>\n            </div>\n\n            <TherapistsTable\n                v-model:sort-by=\"sorting.sortBy\"\n                v-model:sorting-order=\"sorting.sortingOrder\"\n                :therapists=\"therapists\"\n                :loading=\"isLoading\"\n                :pagination=\"pagination\"\n                @editTherapist=\"showEditTherapistModal\"\n                @deleteTherapist=\"onTherapistDelete\"\n            />\n        </VaCardContent>\n    </VaCard>\n\n    <VaModal\n        v-slot=\"{ cancel, ok }\"\n        v-model=\"doShowEditTherapistModal\"\n        size=\"small\"\n        mobile-fullscreen\n        close-button\n        hide-default-actions\n        :before-cancel=\"beforeEditFormModalClose\"\n    >\n        <h1 class=\"va-h5\">{{ therapistToEdit ? 'Edit therapist' : 'Add therapist' }}</h1>\n        <EditTherapistForm\n            ref=\"editFormRef\"\n            :therapist=\"therapistToEdit\"\n            :save-button-label=\"therapistToEdit ? 'Save' : 'Add'\"\n            @close=\"cancel\"\n            @save=\"\n                (therapist) => {\n                    onTherapistSaved(therapist)\n                    ok()\n                }\n            \"\n        />\n    </VaModal>\n</template>\n"],"names":["avatarColor","therapistName","colors","index","isUrl","avatar","columns","defineVaDataTableColumns","props","__props","emit","__emit","therapists","toRef","sortByVModel","useVModel","sortingOrderVModel","totalPages","computed","confirm","useModal","onTherapistDelete","therapist","defaultNewTherapist","newTherapist","ref","isFormHasUnsavedChanges","key","_a","__expose","watch","originalImages","makeAvatarBlobUrl","makeImageBlobUrl","image","newAvatar","form","useForm","onSave","therapistsDb","getSortItem","obj","sortBy","project","getTherapists","filters","api","error","isActive","search","sortingOrder","filteredTherapists","a","b","first","second","page","perPage","addTherapist","sleep","updateTherapist","t","removeTherapist","makePaginationRef","makeSortingRef","makeFiltersRef","useTherapists","options","isLoading","sorting","pagination","fetch","data","newPagination","unref","ignoreUpdates","watchIgnorable","doShowEditTherapistModal","therapistsApi","therapistToEdit","showEditTherapistModal","showAddTherapistModal","notify","useToast","onTherapistSaved","editFormRef","beforeEditFormModalClose","hide"],"mappings":"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"}