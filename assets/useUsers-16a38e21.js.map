{"version":3,"file":"useUsers-16a38e21.js","sources":["../../src/data/pages/users.ts","../../src/pages/users/composables/useUsers.ts"],"sourcesContent":["import { sleep } from '../../services/utils'\nimport { User } from './../../pages/users/types'\nimport usersDb from './users-db.json'\nimport projectsDb from './projects-db.json'\nimport { Project } from '../../pages/projects/types'\n\nexport const users = usersDb as User[]\n\nconst getUserProjects = (userId: number | string) => {\n    return projectsDb\n        .filter((project) => project.team.includes(Number(userId)))\n        .map((project) => ({\n            ...project,\n            project_owner: users.find((user) => user.id === project.project_owner)!,\n            team: project.team.map((userId) => users.find((user) => user.id === userId)!),\n            status: project.status as Project['status'],\n        }))\n}\n\n// Simulate API calls\n\nexport type Pagination = {\n    page: number\n    perPage: number\n    total: number\n}\n\nexport type Sorting = {\n    sortBy: keyof User | undefined\n    sortingOrder: 'asc' | 'desc' | null\n}\n\nexport type Filters = {\n    isActive: boolean\n    search: string\n}\n\nconst getSortItem = (obj: any, sortBy: string) => {\n    if (sortBy === 'projects') {\n        return obj.projects.map((project: any) => project.project_name).join(', ')\n    }\n\n    return obj[sortBy]\n}\n\nexport const getUsers = async (filters: Partial<Filters & Pagination & Sorting>) => {\n    await sleep(1000)\n    const { isActive, search, sortBy, sortingOrder } = filters\n    let filteredUsers = users\n\n    filteredUsers = filteredUsers.filter((user) => user.active === isActive)\n\n    if (search) {\n        filteredUsers = filteredUsers.filter((user) => user.fullname.toLowerCase().includes(search.toLowerCase()))\n    }\n\n    filteredUsers = filteredUsers.map((user) => ({ ...user, projects: getUserProjects(user.id) }))\n\n    if (sortBy && sortingOrder) {\n        filteredUsers = filteredUsers.sort((a, b) => {\n            const first = getSortItem(a, sortBy)\n            const second = getSortItem(b, sortBy)\n            if (first > second) {\n                return sortingOrder === 'asc' ? 1 : -1\n            }\n            if (first < second) {\n                return sortingOrder === 'asc' ? -1 : 1\n            }\n            return 0\n        })\n    }\n\n    const { page = 1, perPage = 10 } = filters || {}\n    return {\n        data: filteredUsers.slice((page - 1) * perPage, page * perPage),\n        pagination: {\n            page,\n            perPage,\n            total: filteredUsers.length,\n        },\n    }\n}\n\nexport const addUser = async (user: User) => {\n    await sleep(1000)\n    users.unshift(user)\n}\n\nexport const updateUser = async (user: User) => {\n    await sleep(1000)\n    const index = users.findIndex((u) => u.id === user.id)\n    users[index] = user\n}\n\nexport const removeUser = async (user: User) => {\n    await sleep(1000)\n    users.splice(\n        users.findIndex((u) => u.id === user.id),\n        1,\n    )\n}\n","import { Ref, ref, unref, watch } from 'vue'\nimport { getUsers, updateUser, addUser, removeUser, type Filters, Pagination, Sorting } from '../../../data/pages/users'\nimport { User } from '../types'\nimport { watchIgnorable } from '@vueuse/core'\n\nconst makePaginationRef = () => ref<Pagination>({ page: 1, perPage: 10, total: 0 })\nconst makeSortingRef = () => ref<Sorting>({ sortBy: 'fullname', sortingOrder: null })\nconst makeFiltersRef = () => ref<Partial<Filters>>({ isActive: true, search: '' })\n\nexport const useUsers = (options?: {\n    pagination?: Ref<Pagination>\n    sorting?: Ref<Sorting>\n    filters?: Ref<Partial<Filters>>\n}) => {\n    const isLoading = ref(false)\n    const users = ref<User[]>([])\n\n    const { filters = makeFiltersRef(), sorting = makeSortingRef(), pagination = makePaginationRef() } = options || {}\n\n    const fetch = async () => {\n        isLoading.value = true\n        const { data, pagination: newPagination } = await getUsers({\n            ...unref(filters),\n            ...unref(sorting),\n            ...unref(pagination),\n        })\n        users.value = data\n\n        ignoreUpdates(() => {\n            pagination.value = newPagination\n        })\n\n        isLoading.value = false\n    }\n\n    const { ignoreUpdates } = watchIgnorable([pagination, sorting], fetch, { deep: true })\n\n    watch(\n        filters,\n        () => {\n            // Reset pagination to first page when filters changed\n            pagination.value.page = 1\n            fetch()\n        },\n        { deep: true },\n    )\n\n    fetch()\n\n    return {\n        isLoading,\n\n        filters,\n        sorting,\n        pagination,\n\n        users,\n\n        fetch,\n\n        async add(user: User) {\n            isLoading.value = true\n            await addUser(user)\n            await fetch()\n            isLoading.value = false\n        },\n\n        async update(user: User) {\n            isLoading.value = true\n            await updateUser(user)\n            await fetch()\n            isLoading.value = false\n        },\n\n        async remove(user: User) {\n            isLoading.value = true\n            await removeUser(user)\n            await fetch()\n            isLoading.value = false\n        },\n    }\n}\n"],"names":["users","usersDb","getUserProjects","userId","projectsDb","project","user","getSortItem","obj","sortBy","getUsers","filters","sleep","isActive","search","sortingOrder","filteredUsers","a","b","first","second","page","perPage","addUser","updateUser","index","u","removeUser","makePaginationRef","ref","makeSortingRef","makeFiltersRef","useUsers","options","isLoading","sorting","pagination","fetch","data","newPagination","unref","ignoreUpdates","watchIgnorable","watch"],"mappings":"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"}